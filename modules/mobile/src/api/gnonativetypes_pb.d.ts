// @generated by protoc-gen-es v1.5.1
// @generated from file gnonativetypes.proto (package land.gno.gnonative.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * messages
 *
 * @generated from message land.gno.gnonative.v1.SetRemoteRequest
 */
export declare class SetRemoteRequest extends Message<SetRemoteRequest> {
  /**
   * @generated from field: string remote = 1;
   */
  remote: string;

  constructor(data?: PartialMessage<SetRemoteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.SetRemoteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetRemoteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetRemoteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetRemoteRequest;

  static equals(a: SetRemoteRequest | PlainMessage<SetRemoteRequest> | undefined, b: SetRemoteRequest | PlainMessage<SetRemoteRequest> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.SetRemoteResponse
 */
export declare class SetRemoteResponse extends Message<SetRemoteResponse> {
  constructor(data?: PartialMessage<SetRemoteResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.SetRemoteResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetRemoteResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetRemoteResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetRemoteResponse;

  static equals(a: SetRemoteResponse | PlainMessage<SetRemoteResponse> | undefined, b: SetRemoteResponse | PlainMessage<SetRemoteResponse> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.GetRemoteRequest
 */
export declare class GetRemoteRequest extends Message<GetRemoteRequest> {
  constructor(data?: PartialMessage<GetRemoteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.GetRemoteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetRemoteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetRemoteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetRemoteRequest;

  static equals(a: GetRemoteRequest | PlainMessage<GetRemoteRequest> | undefined, b: GetRemoteRequest | PlainMessage<GetRemoteRequest> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.GetRemoteResponse
 */
export declare class GetRemoteResponse extends Message<GetRemoteResponse> {
  /**
   * @generated from field: string remote = 1;
   */
  remote: string;

  constructor(data?: PartialMessage<GetRemoteResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.GetRemoteResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetRemoteResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetRemoteResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetRemoteResponse;

  static equals(a: GetRemoteResponse | PlainMessage<GetRemoteResponse> | undefined, b: GetRemoteResponse | PlainMessage<GetRemoteResponse> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.SetChainIDRequest
 */
export declare class SetChainIDRequest extends Message<SetChainIDRequest> {
  /**
   * @generated from field: string chain_id = 1;
   */
  chainId: string;

  constructor(data?: PartialMessage<SetChainIDRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.SetChainIDRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetChainIDRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetChainIDRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetChainIDRequest;

  static equals(a: SetChainIDRequest | PlainMessage<SetChainIDRequest> | undefined, b: SetChainIDRequest | PlainMessage<SetChainIDRequest> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.SetChainIDResponse
 */
export declare class SetChainIDResponse extends Message<SetChainIDResponse> {
  constructor(data?: PartialMessage<SetChainIDResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.SetChainIDResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetChainIDResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetChainIDResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetChainIDResponse;

  static equals(a: SetChainIDResponse | PlainMessage<SetChainIDResponse> | undefined, b: SetChainIDResponse | PlainMessage<SetChainIDResponse> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.GetChainIDRequest
 */
export declare class GetChainIDRequest extends Message<GetChainIDRequest> {
  constructor(data?: PartialMessage<GetChainIDRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.GetChainIDRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetChainIDRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetChainIDRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetChainIDRequest;

  static equals(a: GetChainIDRequest | PlainMessage<GetChainIDRequest> | undefined, b: GetChainIDRequest | PlainMessage<GetChainIDRequest> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.GetChainIDResponse
 */
export declare class GetChainIDResponse extends Message<GetChainIDResponse> {
  /**
   * @generated from field: string chain_id = 1;
   */
  chainId: string;

  constructor(data?: PartialMessage<GetChainIDResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.GetChainIDResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetChainIDResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetChainIDResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetChainIDResponse;

  static equals(a: GetChainIDResponse | PlainMessage<GetChainIDResponse> | undefined, b: GetChainIDResponse | PlainMessage<GetChainIDResponse> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.SetPasswordRequest
 */
export declare class SetPasswordRequest extends Message<SetPasswordRequest> {
  /**
   * @generated from field: string password = 1;
   */
  password: string;

  constructor(data?: PartialMessage<SetPasswordRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.SetPasswordRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetPasswordRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetPasswordRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetPasswordRequest;

  static equals(a: SetPasswordRequest | PlainMessage<SetPasswordRequest> | undefined, b: SetPasswordRequest | PlainMessage<SetPasswordRequest> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.SetPasswordResponse
 */
export declare class SetPasswordResponse extends Message<SetPasswordResponse> {
  constructor(data?: PartialMessage<SetPasswordResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.SetPasswordResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetPasswordResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetPasswordResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetPasswordResponse;

  static equals(a: SetPasswordResponse | PlainMessage<SetPasswordResponse> | undefined, b: SetPasswordResponse | PlainMessage<SetPasswordResponse> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.GenerateRecoveryPhraseRequest
 */
export declare class GenerateRecoveryPhraseRequest extends Message<GenerateRecoveryPhraseRequest> {
  constructor(data?: PartialMessage<GenerateRecoveryPhraseRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.GenerateRecoveryPhraseRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateRecoveryPhraseRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateRecoveryPhraseRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateRecoveryPhraseRequest;

  static equals(a: GenerateRecoveryPhraseRequest | PlainMessage<GenerateRecoveryPhraseRequest> | undefined, b: GenerateRecoveryPhraseRequest | PlainMessage<GenerateRecoveryPhraseRequest> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.GenerateRecoveryPhraseResponse
 */
export declare class GenerateRecoveryPhraseResponse extends Message<GenerateRecoveryPhraseResponse> {
  /**
   * @generated from field: string phrase = 1;
   */
  phrase: string;

  constructor(data?: PartialMessage<GenerateRecoveryPhraseResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.GenerateRecoveryPhraseResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GenerateRecoveryPhraseResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GenerateRecoveryPhraseResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GenerateRecoveryPhraseResponse;

  static equals(a: GenerateRecoveryPhraseResponse | PlainMessage<GenerateRecoveryPhraseResponse> | undefined, b: GenerateRecoveryPhraseResponse | PlainMessage<GenerateRecoveryPhraseResponse> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.KeyInfo
 */
export declare class KeyInfo extends Message<KeyInfo> {
  /**
   * 0: local, 1: ledger, 2: offline, 3: multi
   *
   * @generated from field: uint32 type = 1;
   */
  type: number;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: bytes pub_key = 3;
   */
  pubKey: Uint8Array;

  /**
   * @generated from field: bytes address = 4;
   */
  address: Uint8Array;

  constructor(data?: PartialMessage<KeyInfo>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.KeyInfo";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): KeyInfo;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): KeyInfo;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): KeyInfo;

  static equals(a: KeyInfo | PlainMessage<KeyInfo> | undefined, b: KeyInfo | PlainMessage<KeyInfo> | undefined): boolean;
}

/**
 * Coin holds some amount of one currency.
 * A negative amount is invalid.
 *
 * @generated from message land.gno.gnonative.v1.Coin
 */
export declare class Coin extends Message<Coin> {
  /**
   * @generated from field: string denom = 1;
   */
  denom: string;

  /**
   * @generated from field: sint64 amount = 2;
   */
  amount: bigint;

  constructor(data?: PartialMessage<Coin>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.Coin";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Coin;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Coin;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Coin;

  static equals(a: Coin | PlainMessage<Coin> | undefined, b: Coin | PlainMessage<Coin> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.BaseAccount
 */
export declare class BaseAccount extends Message<BaseAccount> {
  /**
   * @generated from field: bytes address = 1;
   */
  address: Uint8Array;

  /**
   * @generated from field: repeated land.gno.gnonative.v1.Coin coins = 2;
   */
  coins: Coin[];

  /**
   * @generated from field: bytes pub_key = 3;
   */
  pubKey: Uint8Array;

  /**
   * @generated from field: uint64 account_number = 4;
   */
  accountNumber: bigint;

  /**
   * @generated from field: uint64 sequence = 5;
   */
  sequence: bigint;

  constructor(data?: PartialMessage<BaseAccount>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.BaseAccount";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BaseAccount;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BaseAccount;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BaseAccount;

  static equals(a: BaseAccount | PlainMessage<BaseAccount> | undefined, b: BaseAccount | PlainMessage<BaseAccount> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.ListKeyInfoRequest
 */
export declare class ListKeyInfoRequest extends Message<ListKeyInfoRequest> {
  constructor(data?: PartialMessage<ListKeyInfoRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.ListKeyInfoRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListKeyInfoRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListKeyInfoRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListKeyInfoRequest;

  static equals(a: ListKeyInfoRequest | PlainMessage<ListKeyInfoRequest> | undefined, b: ListKeyInfoRequest | PlainMessage<ListKeyInfoRequest> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.ListKeyInfoResponse
 */
export declare class ListKeyInfoResponse extends Message<ListKeyInfoResponse> {
  /**
   * @generated from field: repeated land.gno.gnonative.v1.KeyInfo keys = 1 [json_name = "key_info"];
   */
  keys: KeyInfo[];

  constructor(data?: PartialMessage<ListKeyInfoResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.ListKeyInfoResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListKeyInfoResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListKeyInfoResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListKeyInfoResponse;

  static equals(a: ListKeyInfoResponse | PlainMessage<ListKeyInfoResponse> | undefined, b: ListKeyInfoResponse | PlainMessage<ListKeyInfoResponse> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.HasKeyByNameRequest
 */
export declare class HasKeyByNameRequest extends Message<HasKeyByNameRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  constructor(data?: PartialMessage<HasKeyByNameRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.HasKeyByNameRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HasKeyByNameRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HasKeyByNameRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HasKeyByNameRequest;

  static equals(a: HasKeyByNameRequest | PlainMessage<HasKeyByNameRequest> | undefined, b: HasKeyByNameRequest | PlainMessage<HasKeyByNameRequest> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.HasKeyByNameResponse
 */
export declare class HasKeyByNameResponse extends Message<HasKeyByNameResponse> {
  /**
   * @generated from field: bool has = 1;
   */
  has: boolean;

  constructor(data?: PartialMessage<HasKeyByNameResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.HasKeyByNameResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HasKeyByNameResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HasKeyByNameResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HasKeyByNameResponse;

  static equals(a: HasKeyByNameResponse | PlainMessage<HasKeyByNameResponse> | undefined, b: HasKeyByNameResponse | PlainMessage<HasKeyByNameResponse> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.HasKeyByAddressRequest
 */
export declare class HasKeyByAddressRequest extends Message<HasKeyByAddressRequest> {
  /**
   * @generated from field: bytes address = 1;
   */
  address: Uint8Array;

  constructor(data?: PartialMessage<HasKeyByAddressRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.HasKeyByAddressRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HasKeyByAddressRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HasKeyByAddressRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HasKeyByAddressRequest;

  static equals(a: HasKeyByAddressRequest | PlainMessage<HasKeyByAddressRequest> | undefined, b: HasKeyByAddressRequest | PlainMessage<HasKeyByAddressRequest> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.HasKeyByAddressResponse
 */
export declare class HasKeyByAddressResponse extends Message<HasKeyByAddressResponse> {
  /**
   * @generated from field: bool has = 1;
   */
  has: boolean;

  constructor(data?: PartialMessage<HasKeyByAddressResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.HasKeyByAddressResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HasKeyByAddressResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HasKeyByAddressResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HasKeyByAddressResponse;

  static equals(a: HasKeyByAddressResponse | PlainMessage<HasKeyByAddressResponse> | undefined, b: HasKeyByAddressResponse | PlainMessage<HasKeyByAddressResponse> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.HasKeyByNameOrAddressRequest
 */
export declare class HasKeyByNameOrAddressRequest extends Message<HasKeyByNameOrAddressRequest> {
  /**
   * @generated from field: string name_or_bech32 = 1;
   */
  nameOrBech32: string;

  constructor(data?: PartialMessage<HasKeyByNameOrAddressRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.HasKeyByNameOrAddressRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HasKeyByNameOrAddressRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HasKeyByNameOrAddressRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HasKeyByNameOrAddressRequest;

  static equals(a: HasKeyByNameOrAddressRequest | PlainMessage<HasKeyByNameOrAddressRequest> | undefined, b: HasKeyByNameOrAddressRequest | PlainMessage<HasKeyByNameOrAddressRequest> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.HasKeyByNameOrAddressResponse
 */
export declare class HasKeyByNameOrAddressResponse extends Message<HasKeyByNameOrAddressResponse> {
  /**
   * @generated from field: bool has = 1;
   */
  has: boolean;

  constructor(data?: PartialMessage<HasKeyByNameOrAddressResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.HasKeyByNameOrAddressResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HasKeyByNameOrAddressResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HasKeyByNameOrAddressResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HasKeyByNameOrAddressResponse;

  static equals(a: HasKeyByNameOrAddressResponse | PlainMessage<HasKeyByNameOrAddressResponse> | undefined, b: HasKeyByNameOrAddressResponse | PlainMessage<HasKeyByNameOrAddressResponse> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.GetKeyInfoByNameRequest
 */
export declare class GetKeyInfoByNameRequest extends Message<GetKeyInfoByNameRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  constructor(data?: PartialMessage<GetKeyInfoByNameRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.GetKeyInfoByNameRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetKeyInfoByNameRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetKeyInfoByNameRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetKeyInfoByNameRequest;

  static equals(a: GetKeyInfoByNameRequest | PlainMessage<GetKeyInfoByNameRequest> | undefined, b: GetKeyInfoByNameRequest | PlainMessage<GetKeyInfoByNameRequest> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.GetKeyInfoByNameResponse
 */
export declare class GetKeyInfoByNameResponse extends Message<GetKeyInfoByNameResponse> {
  /**
   * @generated from field: land.gno.gnonative.v1.KeyInfo key = 1 [json_name = "key_info"];
   */
  key?: KeyInfo;

  constructor(data?: PartialMessage<GetKeyInfoByNameResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.GetKeyInfoByNameResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetKeyInfoByNameResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetKeyInfoByNameResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetKeyInfoByNameResponse;

  static equals(a: GetKeyInfoByNameResponse | PlainMessage<GetKeyInfoByNameResponse> | undefined, b: GetKeyInfoByNameResponse | PlainMessage<GetKeyInfoByNameResponse> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.GetKeyInfoByAddressRequest
 */
export declare class GetKeyInfoByAddressRequest extends Message<GetKeyInfoByAddressRequest> {
  /**
   * @generated from field: bytes address = 1;
   */
  address: Uint8Array;

  constructor(data?: PartialMessage<GetKeyInfoByAddressRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.GetKeyInfoByAddressRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetKeyInfoByAddressRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetKeyInfoByAddressRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetKeyInfoByAddressRequest;

  static equals(a: GetKeyInfoByAddressRequest | PlainMessage<GetKeyInfoByAddressRequest> | undefined, b: GetKeyInfoByAddressRequest | PlainMessage<GetKeyInfoByAddressRequest> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.GetKeyInfoByAddressResponse
 */
export declare class GetKeyInfoByAddressResponse extends Message<GetKeyInfoByAddressResponse> {
  /**
   * @generated from field: land.gno.gnonative.v1.KeyInfo key = 1 [json_name = "key_info"];
   */
  key?: KeyInfo;

  constructor(data?: PartialMessage<GetKeyInfoByAddressResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.GetKeyInfoByAddressResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetKeyInfoByAddressResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetKeyInfoByAddressResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetKeyInfoByAddressResponse;

  static equals(a: GetKeyInfoByAddressResponse | PlainMessage<GetKeyInfoByAddressResponse> | undefined, b: GetKeyInfoByAddressResponse | PlainMessage<GetKeyInfoByAddressResponse> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.GetKeyInfoByNameOrAddressRequest
 */
export declare class GetKeyInfoByNameOrAddressRequest extends Message<GetKeyInfoByNameOrAddressRequest> {
  /**
   * @generated from field: string name_or_bech32 = 1;
   */
  nameOrBech32: string;

  constructor(data?: PartialMessage<GetKeyInfoByNameOrAddressRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.GetKeyInfoByNameOrAddressRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetKeyInfoByNameOrAddressRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetKeyInfoByNameOrAddressRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetKeyInfoByNameOrAddressRequest;

  static equals(a: GetKeyInfoByNameOrAddressRequest | PlainMessage<GetKeyInfoByNameOrAddressRequest> | undefined, b: GetKeyInfoByNameOrAddressRequest | PlainMessage<GetKeyInfoByNameOrAddressRequest> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.GetKeyInfoByNameOrAddressResponse
 */
export declare class GetKeyInfoByNameOrAddressResponse extends Message<GetKeyInfoByNameOrAddressResponse> {
  /**
   * @generated from field: land.gno.gnonative.v1.KeyInfo key = 1 [json_name = "key_info"];
   */
  key?: KeyInfo;

  constructor(data?: PartialMessage<GetKeyInfoByNameOrAddressResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.GetKeyInfoByNameOrAddressResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetKeyInfoByNameOrAddressResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetKeyInfoByNameOrAddressResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetKeyInfoByNameOrAddressResponse;

  static equals(a: GetKeyInfoByNameOrAddressResponse | PlainMessage<GetKeyInfoByNameOrAddressResponse> | undefined, b: GetKeyInfoByNameOrAddressResponse | PlainMessage<GetKeyInfoByNameOrAddressResponse> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.CreateAccountRequest
 */
export declare class CreateAccountRequest extends Message<CreateAccountRequest> {
  /**
   * @generated from field: string name_or_bech32 = 1;
   */
  nameOrBech32: string;

  /**
   * @generated from field: string mnemonic = 2;
   */
  mnemonic: string;

  /**
   * @generated from field: string bip39_passwd = 3;
   */
  bip39Passwd: string;

  /**
   * @generated from field: string password = 4;
   */
  password: string;

  /**
   * @generated from field: uint32 account = 5;
   */
  account: number;

  /**
   * @generated from field: uint32 index = 6;
   */
  index: number;

  constructor(data?: PartialMessage<CreateAccountRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.CreateAccountRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAccountRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAccountRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAccountRequest;

  static equals(a: CreateAccountRequest | PlainMessage<CreateAccountRequest> | undefined, b: CreateAccountRequest | PlainMessage<CreateAccountRequest> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.CreateAccountResponse
 */
export declare class CreateAccountResponse extends Message<CreateAccountResponse> {
  /**
   * @generated from field: land.gno.gnonative.v1.KeyInfo key = 1 [json_name = "key_info"];
   */
  key?: KeyInfo;

  constructor(data?: PartialMessage<CreateAccountResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.CreateAccountResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateAccountResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateAccountResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateAccountResponse;

  static equals(a: CreateAccountResponse | PlainMessage<CreateAccountResponse> | undefined, b: CreateAccountResponse | PlainMessage<CreateAccountResponse> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.SelectAccountRequest
 */
export declare class SelectAccountRequest extends Message<SelectAccountRequest> {
  /**
   * @generated from field: string name_or_bech32 = 1;
   */
  nameOrBech32: string;

  constructor(data?: PartialMessage<SelectAccountRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.SelectAccountRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SelectAccountRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SelectAccountRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SelectAccountRequest;

  static equals(a: SelectAccountRequest | PlainMessage<SelectAccountRequest> | undefined, b: SelectAccountRequest | PlainMessage<SelectAccountRequest> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.SelectAccountResponse
 */
export declare class SelectAccountResponse extends Message<SelectAccountResponse> {
  /**
   * @generated from field: land.gno.gnonative.v1.KeyInfo key = 1 [json_name = "key_info"];
   */
  key?: KeyInfo;

  /**
   * True if the password has been set. If false, then call SetPassword.
   *
   * @generated from field: bool has_password = 2;
   */
  hasPassword: boolean;

  constructor(data?: PartialMessage<SelectAccountResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.SelectAccountResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SelectAccountResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SelectAccountResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SelectAccountResponse;

  static equals(a: SelectAccountResponse | PlainMessage<SelectAccountResponse> | undefined, b: SelectAccountResponse | PlainMessage<SelectAccountResponse> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.GetActiveAccountRequest
 */
export declare class GetActiveAccountRequest extends Message<GetActiveAccountRequest> {
  constructor(data?: PartialMessage<GetActiveAccountRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.GetActiveAccountRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetActiveAccountRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetActiveAccountRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetActiveAccountRequest;

  static equals(a: GetActiveAccountRequest | PlainMessage<GetActiveAccountRequest> | undefined, b: GetActiveAccountRequest | PlainMessage<GetActiveAccountRequest> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.GetActiveAccountResponse
 */
export declare class GetActiveAccountResponse extends Message<GetActiveAccountResponse> {
  /**
   * @generated from field: land.gno.gnonative.v1.KeyInfo key = 1 [json_name = "key_info"];
   */
  key?: KeyInfo;

  /**
   * True if the password has been set. If false, then call SetPassword.
   *
   * @generated from field: bool has_password = 2;
   */
  hasPassword: boolean;

  constructor(data?: PartialMessage<GetActiveAccountResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.GetActiveAccountResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetActiveAccountResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetActiveAccountResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetActiveAccountResponse;

  static equals(a: GetActiveAccountResponse | PlainMessage<GetActiveAccountResponse> | undefined, b: GetActiveAccountResponse | PlainMessage<GetActiveAccountResponse> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.QueryAccountRequest
 */
export declare class QueryAccountRequest extends Message<QueryAccountRequest> {
  /**
   * @generated from field: bytes address = 1;
   */
  address: Uint8Array;

  constructor(data?: PartialMessage<QueryAccountRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.QueryAccountRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAccountRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAccountRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAccountRequest;

  static equals(a: QueryAccountRequest | PlainMessage<QueryAccountRequest> | undefined, b: QueryAccountRequest | PlainMessage<QueryAccountRequest> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.QueryAccountResponse
 */
export declare class QueryAccountResponse extends Message<QueryAccountResponse> {
  /**
   * @generated from field: land.gno.gnonative.v1.BaseAccount account_info = 1;
   */
  accountInfo?: BaseAccount;

  constructor(data?: PartialMessage<QueryAccountResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.QueryAccountResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryAccountResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryAccountResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryAccountResponse;

  static equals(a: QueryAccountResponse | PlainMessage<QueryAccountResponse> | undefined, b: QueryAccountResponse | PlainMessage<QueryAccountResponse> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.DeleteAccountRequest
 */
export declare class DeleteAccountRequest extends Message<DeleteAccountRequest> {
  /**
   * @generated from field: string name_or_bech32 = 1;
   */
  nameOrBech32: string;

  /**
   * @generated from field: string password = 2;
   */
  password: string;

  /**
   * @generated from field: bool skip_password = 3;
   */
  skipPassword: boolean;

  constructor(data?: PartialMessage<DeleteAccountRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.DeleteAccountRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteAccountRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteAccountRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteAccountRequest;

  static equals(a: DeleteAccountRequest | PlainMessage<DeleteAccountRequest> | undefined, b: DeleteAccountRequest | PlainMessage<DeleteAccountRequest> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.DeleteAccountResponse
 */
export declare class DeleteAccountResponse extends Message<DeleteAccountResponse> {
  constructor(data?: PartialMessage<DeleteAccountResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.DeleteAccountResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteAccountResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteAccountResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteAccountResponse;

  static equals(a: DeleteAccountResponse | PlainMessage<DeleteAccountResponse> | undefined, b: DeleteAccountResponse | PlainMessage<DeleteAccountResponse> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.QueryRequest
 */
export declare class QueryRequest extends Message<QueryRequest> {
  /**
   * Example: "vm/qrender"
   *
   * @generated from field: string path = 1;
   */
  path: string;

  /**
   * Example: "gno.land/r/demo/boards\ntestboard"
   *
   * @generated from field: bytes data = 2;
   */
  data: Uint8Array;

  constructor(data?: PartialMessage<QueryRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.QueryRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryRequest;

  static equals(a: QueryRequest | PlainMessage<QueryRequest> | undefined, b: QueryRequest | PlainMessage<QueryRequest> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.QueryResponse
 */
export declare class QueryResponse extends Message<QueryResponse> {
  /**
   * @generated from field: bytes result = 1;
   */
  result: Uint8Array;

  constructor(data?: PartialMessage<QueryResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.QueryResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryResponse;

  static equals(a: QueryResponse | PlainMessage<QueryResponse> | undefined, b: QueryResponse | PlainMessage<QueryResponse> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.RenderRequest
 */
export declare class RenderRequest extends Message<RenderRequest> {
  /**
   * Example: "gno.land/r/demo/boards"
   *
   * @generated from field: string package_path = 1;
   */
  packagePath: string;

  /**
   * Example: "testboard/1"
   *
   * @generated from field: string args = 2;
   */
  args: string;

  constructor(data?: PartialMessage<RenderRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.RenderRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RenderRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RenderRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RenderRequest;

  static equals(a: RenderRequest | PlainMessage<RenderRequest> | undefined, b: RenderRequest | PlainMessage<RenderRequest> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.RenderResponse
 */
export declare class RenderResponse extends Message<RenderResponse> {
  /**
   * The Render function result (typically markdown)
   *
   * @generated from field: string result = 1;
   */
  result: string;

  constructor(data?: PartialMessage<RenderResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.RenderResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RenderResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RenderResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RenderResponse;

  static equals(a: RenderResponse | PlainMessage<RenderResponse> | undefined, b: RenderResponse | PlainMessage<RenderResponse> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.QEvalRequest
 */
export declare class QEvalRequest extends Message<QEvalRequest> {
  /**
   * Example: "gno.land/r/demo/boards"
   *
   * @generated from field: string package_path = 1;
   */
  packagePath: string;

  /**
   * Example: "GetBoardIDFromName(\"testboard\")"
   *
   * @generated from field: string expression = 2;
   */
  expression: string;

  constructor(data?: PartialMessage<QEvalRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.QEvalRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QEvalRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QEvalRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QEvalRequest;

  static equals(a: QEvalRequest | PlainMessage<QEvalRequest> | undefined, b: QEvalRequest | PlainMessage<QEvalRequest> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.QEvalResponse
 */
export declare class QEvalResponse extends Message<QEvalResponse> {
  /**
   * A typed expression like "(1 gno.land/r/demo/boards.BoardID)\n(true bool)"
   *
   * @generated from field: string result = 1;
   */
  result: string;

  constructor(data?: PartialMessage<QEvalResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.QEvalResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QEvalResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QEvalResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QEvalResponse;

  static equals(a: QEvalResponse | PlainMessage<QEvalResponse> | undefined, b: QEvalResponse | PlainMessage<QEvalResponse> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.CallRequest
 */
export declare class CallRequest extends Message<CallRequest> {
  /**
   * Example: "gno.land/r/demo/boards"
   *
   * @generated from field: string package_path = 1;
   */
  packagePath: string;

  /**
   * Example: "CreateReply"
   *
   * @generated from field: string fnc = 2;
   */
  fnc: string;

  /**
   * list of arguments specific to the function
   *
   * @generated from field: repeated string args = 3;
   */
  args: string[];

  /**
   * @generated from field: string gas_fee = 4;
   */
  gasFee: string;

  /**
   * @generated from field: sint64 gas_wanted = 5;
   */
  gasWanted: bigint;

  /**
   * @generated from field: string send = 6;
   */
  send: string;

  /**
   * @generated from field: string memo = 7;
   */
  memo: string;

  constructor(data?: PartialMessage<CallRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.CallRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CallRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CallRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CallRequest;

  static equals(a: CallRequest | PlainMessage<CallRequest> | undefined, b: CallRequest | PlainMessage<CallRequest> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.CallResponse
 */
export declare class CallResponse extends Message<CallResponse> {
  /**
   * @generated from field: bytes result = 1;
   */
  result: Uint8Array;

  constructor(data?: PartialMessage<CallResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.CallResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CallResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CallResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CallResponse;

  static equals(a: CallResponse | PlainMessage<CallResponse> | undefined, b: CallResponse | PlainMessage<CallResponse> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.AddressToBech32Request
 */
export declare class AddressToBech32Request extends Message<AddressToBech32Request> {
  /**
   * @generated from field: bytes address = 1;
   */
  address: Uint8Array;

  constructor(data?: PartialMessage<AddressToBech32Request>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.AddressToBech32Request";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddressToBech32Request;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddressToBech32Request;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddressToBech32Request;

  static equals(a: AddressToBech32Request | PlainMessage<AddressToBech32Request> | undefined, b: AddressToBech32Request | PlainMessage<AddressToBech32Request> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.AddressToBech32Response
 */
export declare class AddressToBech32Response extends Message<AddressToBech32Response> {
  /**
   * @generated from field: string bech32_address = 1;
   */
  bech32Address: string;

  constructor(data?: PartialMessage<AddressToBech32Response>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.AddressToBech32Response";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddressToBech32Response;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddressToBech32Response;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddressToBech32Response;

  static equals(a: AddressToBech32Response | PlainMessage<AddressToBech32Response> | undefined, b: AddressToBech32Response | PlainMessage<AddressToBech32Response> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.AddressFromBech32Request
 */
export declare class AddressFromBech32Request extends Message<AddressFromBech32Request> {
  /**
   * @generated from field: string bech32_address = 1;
   */
  bech32Address: string;

  constructor(data?: PartialMessage<AddressFromBech32Request>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.AddressFromBech32Request";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddressFromBech32Request;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddressFromBech32Request;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddressFromBech32Request;

  static equals(a: AddressFromBech32Request | PlainMessage<AddressFromBech32Request> | undefined, b: AddressFromBech32Request | PlainMessage<AddressFromBech32Request> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.AddressFromBech32Response
 */
export declare class AddressFromBech32Response extends Message<AddressFromBech32Response> {
  /**
   * @generated from field: bytes address = 1;
   */
  address: Uint8Array;

  constructor(data?: PartialMessage<AddressFromBech32Response>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.AddressFromBech32Response";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddressFromBech32Response;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddressFromBech32Response;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddressFromBech32Response;

  static equals(a: AddressFromBech32Response | PlainMessage<AddressFromBech32Response> | undefined, b: AddressFromBech32Response | PlainMessage<AddressFromBech32Response> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.HelloRequest
 */
export declare class HelloRequest extends Message<HelloRequest> {
  /**
   * @generated from field: string name = 1 [json_name = "Name"];
   */
  name: string;

  constructor(data?: PartialMessage<HelloRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.HelloRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HelloRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HelloRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HelloRequest;

  static equals(a: HelloRequest | PlainMessage<HelloRequest> | undefined, b: HelloRequest | PlainMessage<HelloRequest> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.HelloResponse
 */
export declare class HelloResponse extends Message<HelloResponse> {
  /**
   * @generated from field: string greeting = 1 [json_name = "Greeting"];
   */
  greeting: string;

  constructor(data?: PartialMessage<HelloResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.HelloResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HelloResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HelloResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HelloResponse;

  static equals(a: HelloResponse | PlainMessage<HelloResponse> | undefined, b: HelloResponse | PlainMessage<HelloResponse> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.HelloStreamRequest
 */
export declare class HelloStreamRequest extends Message<HelloStreamRequest> {
  /**
   * @generated from field: string name = 1 [json_name = "Name"];
   */
  name: string;

  constructor(data?: PartialMessage<HelloStreamRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.HelloStreamRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HelloStreamRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HelloStreamRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HelloStreamRequest;

  static equals(a: HelloStreamRequest | PlainMessage<HelloStreamRequest> | undefined, b: HelloStreamRequest | PlainMessage<HelloStreamRequest> | undefined): boolean;
}

/**
 * @generated from message land.gno.gnonative.v1.HelloStreamResponse
 */
export declare class HelloStreamResponse extends Message<HelloStreamResponse> {
  /**
   * @generated from field: string greeting = 1 [json_name = "Greeting"];
   */
  greeting: string;

  constructor(data?: PartialMessage<HelloStreamResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "land.gno.gnonative.v1.HelloStreamResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HelloStreamResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HelloStreamResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HelloStreamResponse;

  static equals(a: HelloStreamResponse | PlainMessage<HelloStreamResponse> | undefined, b: HelloStreamResponse | PlainMessage<HelloStreamResponse> | undefined): boolean;
}

